---
description: 
globs: 
alwaysApply: true
---
Objetivo: Garantizar la máxima seguridad de tipos en todo el código TypeScript.
Directivas:
Tipado Explícito Obligatorio: Todas las variables, parámetros de función, tipos de retorno y props de componentes deben tener tipos explícitos. Usa interface o type extensivamente.
Prohibición de any: No uses el tipo any. Usa unknown con las comprobaciones necesarias o tipos genéricos (<T>) cuando sea apropiado.
Tipos Personalizados Específicos: Utiliza siempre los tipos/interfaces personalizados definidos para el dominio (ej. QuantSignal, Signal, FxData, TechnicalAnalysisData, ToolResultPart, CoreMessage) y sé consistente en su uso. Crea nuevos tipos específicos cuando sea necesario.
Interfaces para Estructuras: Define interface claras para objetos complejos, estados y, especialmente, para respuestas y parámetros de API/herramientas.
Type Guards: Implementa y utiliza type guards (ej. isForexPair, isTimeframe) para validaciones en tiempo de ejecución, sobre todo con datos externos o de usuario.
Timestamps: Asegúrate de que los timestamps se manejen consistentemente como tipo number.